#BlueJ class context
comment0.target=KeyValidator
comment0.text=\r\n\ Key\:\r\n\ Core\:\ \ \ \ \ \ \ Method\ must\ report\ whether\ the\ key\ is\ valid,\ or\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ report\ that\ it\ is\ invalid\ and\ give\ one\ reason\ why\ it\ is\ invalid.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ To\ be\ valid,\ the\ key\ must\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ be\ at\ least\ 8\ characters\ and\ at\ most\ 16\ characters\ long,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ not\ end\ with\ the\ special\ characters\ '\#'\ or\ '$',\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ not\ have\ a\ hyphen\ ('-')\ character\ anywhere\r\n\ \ \ \ \ \ \ \ \ \ \ \ \r\n\ Completion\:\ Method\ should\ either\ report\ that\ the\ key\ is\ valid,\ or\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ report\ that\ it\ is\ invalid\ and\ list\ ALL\ the\ reasons\ that\ it\ is\ invalid.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ To\ be\ valid,\ the\ key\ must\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ satisfy\ all\ of\ the\ conditions\ above\ AND\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ have\ at\ least\ one\ Upper\ case\ character\ and\ at\ least\ one\ Lower\ case\ character,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ not\ start\ with\ the\ same\ character\ as\ the\ first\ character\ of\ the\ user's\ name\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ contain\ either\ a\ '\#'\ or\ a\ '$',\ but\ not\ both.\r\n\ Challenge\:\ \ Same\ as\ completion,\ except\ that\ to\ be\ valid,\ the\ key\ must\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ satisfy\ all\ of\ the\ conditions\ above\ AND\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ have\ a\ mix\ of\ numbers\ and\ letters\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ not\ contain\ any\ "suffix"\ of\ the\ user's\ name\ of\ 2\ characters\ or\ more\ in\ any\ case.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (eg\ if\ name\ is\ Peter,\ it\ does\ not\ contain\ "er",\ or\ "eR"\ or\ "ter",\ or\ "eTer"\ or\ "ETER",\ or...)\r\n\r\n\ Hint.\ \ Look\ at\ the\ documentation\ in\ the\ String\ class.\r\n\ You\ will\ definitely\ find\ the\ length(),\ endsWith(...),\ and\ contains(...)\ methods\ to\ be\ helpful\r\n
comment1.params=
comment1.target=void\ doCore()
comment1.text=\r\n\ Asks\ user\ for\ key\ word\ and\ then\ checks\ if\ it\ is\ a\ valid\ key\ word.\r\n
comment2.params=key
comment2.target=void\ validateKeyCore(java.lang.String)
comment3.params=
comment3.target=void\ doCompletion()
comment3.text=\r\n\ Asks\ user\ for\ key\ word\ and\ the\ name\ and\ then\ checks\ if\ it\ is\ a\ valid\ key\ word.\r\n
comment4.params=key\ name
comment4.target=void\ validateKeyCompletion(java.lang.String,\ java.lang.String)
comment4.text=\ COMPLETION\r\n\ Report\ that\ the\ key\ is\ valid\ or\ report\ ALL\ the\ rules\ that\ the\ key\ failed.\r\n
comment5.params=
comment5.target=void\ doChallenge()
comment6.params=key\ name
comment6.target=void\ validateKeyChallenge(java.lang.String,\ java.lang.String)
comment7.params=
comment7.target=void\ setupGUI()
comment7.text=\ \ \ \ \ \ \ \ \ \ \ -\ satisfy\ all\ of\ the\ conditions\ above\ AND\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ have\ a\ mix\ of\ numbers\ and\ letters\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ -\ not\ contain\ any\ "suffix"\ of\ the\ user's\ name\ of\ 2\ characters\ or\ more\ in\ any\ case.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ (eg\ if\ name\ is\ Peter,\ it\ does\ not\ contain\ "er",\ or\ "eR"\ or\ "ter",\ or\ "eTer"\ or\ "ETER",\ or...)\r\n
comment8.params=args
comment8.target=void\ main(java.lang.String[])
numComments=9
