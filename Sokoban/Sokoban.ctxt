#BlueJ class context
comment0.target=Sokoban
comment0.text=\ \r\n\ Sokoban\r\n
comment1.params=
comment1.target=Sokoban()
comment1.text=\ \r\n\ \ Constructor\:\ load\ the\ 0th\ level.\r\n
comment10.params=
comment10.target=void\ drawWarehouse()
comment10.text=\r\n\ Draw\ the\ grid\ of\ cells\ on\ the\ screen,\ and\ the\ Worker\ \r\n
comment11.params=pos
comment11.target=void\ drawCell(Position)
comment11.text=\r\n\ Draw\ the\ cell\ at\ a\ given\ position\r\n
comment12.params=row\ col
comment12.target=void\ drawCell(int,\ int)
comment12.text=\r\n\ Draw\ the\ cell\ at\ a\ given\ row,col\r\n
comment13.params=
comment13.target=void\ drawWorker()
comment13.text=\r\n\ Draw\ the\ worker\ at\ its\ current\ position.\r\n
comment14.params=
comment14.target=void\ doLoad()
comment14.text=\r\n\ Load\ a\ grid\ of\ cells\ (and\ Worker\ position)\ for\ the\ current\ level\ from\ a\ file\r\n
comment15.params=
comment15.target=void\ setupGUI()
comment15.text=\r\n\ Add\ the\ buttons\ and\ set\ the\ key\ listener.\r\n
comment16.params=key
comment16.target=void\ doKey(java.lang.String)
comment16.text=\ \r\n\ Respond\ to\ key\ actions\r\n
comment17.params=args
comment17.target=void\ main(java.lang.String[])
comment2.params=direction
comment2.target=void\ moveOrPush(java.lang.String)
comment2.text=\ \r\n\ \ Moves\ the\ worker\ in\ the\ given\ direction,\ if\ possible.\r\n\ \ If\ there\ is\ box\ in\ front\ of\ the\ Worker\ and\ a\ space\ in\ front\ of\ the\ box,\r\n\ \ then\ push\ the\ box.\r\n\ \ Otherwise,\ if\ the\ worker\ can't\ move,\ do\ nothing.\r\n
comment3.params=direction
comment3.target=void\ move(java.lang.String)
comment3.text=\r\n\ Moves\ the\ worker\ into\ the\ new\ position\ (guaranteed\ to\ be\ empty)\ \r\n\ @param\ direction\ the\ direction\ the\ worker\ is\ heading\r\n
comment4.params=direction
comment4.target=void\ push(java.lang.String)
comment4.text=\r\n\ Push\:\ Moves\ the\ Worker,\ pushing\ the\ box\ one\ step\ \r\n\ \ @param\ direction\ the\ direction\ the\ worker\ is\ heading\r\n
comment5.params=direction
comment5.target=void\ pull(java.lang.String)
comment5.text=\r\n\ Pull\:\ (could\ be\ useful\ for\ undoing\ a\ push)\r\n\ \ move\ the\ Worker\ in\ the\ direction,\r\n\ \ pull\ the\ box\ into\ the\ Worker's\ old\ position\r\n
comment6.params=
comment6.target=void\ undo()
comment6.text=\r\n\ Undoes\ the\ last\ move\ the\ player\ made\ by\ grabbing\ the\ last\ ActionRecord\r\n\ off\ the\ top\ of\ the\ stack\ then\ reverses\ the\ move\r\n
comment7.params=
comment7.target=void\ reportWin()
comment7.text=\r\n\ Report\ a\ win\ by\ flickering\ the\ cells\ with\ boxes\r\n
comment8.params=
comment8.target=boolean\ isSolved()
comment8.text=\ \r\n\ \ Returns\ true\ if\ the\ warehouse\ is\ solved,\ \r\n\ \ i.e.,\ all\ the\ shelves\ have\ boxes\ on\ them\ \r\n
comment9.params=direction
comment9.target=java.lang.String\ opposite(java.lang.String)
comment9.text=\ \r\n\ Returns\ the\ direction\ that\ is\ opposite\ of\ the\ parameter\r\n\ useful\ for\ undoing\!\r\n
numComments=18
